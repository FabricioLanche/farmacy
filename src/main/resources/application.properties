# Configuración para producción (Docker)
spring.application.name=farmacy

# Configuración de base de datos
spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.username=${JDBC_DATABASE_USERNAME}
spring.datasource.password=${JDBC_DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuración JPA/Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Pool de conexiones
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000

# Configuración de logging
logging.level.com.example.farmacy=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.file.name=/app/logs/farmacy.log

# Configuración del servidor
server.port=8080
server.servlet.context-path=/

# JWT y Admin (desde variables de entorno)
my.awesome.secret=${JWT_SECRET}
admin.email=${ADMIN_EMAIL}
admin.password=${ADMIN_PASS}

# Actuator para health checks
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized